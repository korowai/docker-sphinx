name: Build Docker Image
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'
  create:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  provide_matrix_json:
    name: Provide matrix.json
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set Matrix
        id: set-matrix
        run: python3 -c 'import config; import json; print("matrix=" + json.dumps(config.matrix));' >> $GITHUB_OUTPUT

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build_docker_image:
    name: Build Image
    runs-on: ubuntu-latest
    needs: provide_matrix_json

    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - 'korowai/sphinx'
        tuple: ${{ fromJson(needs.provide_matrix_json.outputs.matrix) }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Prepare
        id: prep
        run: |
          python3 -c 'import config; print("context=" + config.context_dir("${{ matrix.tuple[0] }}", "${{ matrix.tuple[1] }}"))' >> $GITHUB_OUTPUT
          python3 -c 'import config; print("tag=" + config.context_tag("${{ matrix.tuple[0] }}", "${{ matrix.tuple[1] }}"))' >> $GITHUB_OUTPUT
          python3 -c 'import config; import json; print("tags=" + ",".join([ "${{ matrix.docker_image }}:%s" % c for c in config.context_tags("${{ matrix.tuple[0] }}", "${{ matrix.tuple[1] }}")]))' >> $GITHUB_OUTPUT
          echo "vcs_ref=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          python3 -c 'import config; print("version=" + config.__version__)' >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name == 'create' && github.event.ref_type == 'tag'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name == 'create' && github.event.ref_type == 'tag' }}
          file: ${{ steps.prep.outputs.context }}/Dockerfile
          context: ${{ steps.prep.outputs.context }}
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            VCS_REF=${{ steps.prep.outputs.vcs_ref }}
            BUILD_DATE=${{ steps.prep.outputs.build_date }}
            VERSION=${{ steps.prep.outputs.version }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
